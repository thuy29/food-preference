name: CI/CD pipeline

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  build-and-test-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Run unit tests
        run: pytest tests/unit/ -p no:warnings


      - name: Start API
        run: uvicorn backend.api:app --host 0.0.0.0 --port 8000 &
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        shell: bash

      - name: Wait for API to be ready
        run: |
          until curl -s http://127.0.0.1:8000/metrics; do
            echo "Waiting for API to be ready..."
            sleep 2
          done
        shell: bash

      - name: Run integration tests
        run: pytest tests/integration/


      - name: Run end-to-end tests
        run: pytest tests/E2E/


  push-to-staging:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Push to staging branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -b staging
          git push origin staging

  build-and-test-on-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run all tests
        run: pytest

      - name: Push to production branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -b main
          git push origin main

  deploy-on-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Fetch latest model from MLFlow
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          python scripts/fetch_latest_model.py

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/food-preference-api:latest .

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/food-preference-api:latest

      - name: Deploy to production
        run: |
          # Commandes pour d√©ployer sur la plateforme cloud de votre choix
